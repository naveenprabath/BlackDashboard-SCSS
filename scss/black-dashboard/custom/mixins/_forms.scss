// Define the light and dark mode colors
$light-mode-background: #7F7F7F;
$dark-mode-background: #363636;
$light-mode-border: #d1d1d1;
$dark-mode-border: #444;

@mixin form-control-focus {
  &:focus {
    color: $input-focus-color;
    background-color: $input-focus-bg;
    border-color: $input-focus-border-color;
    outline: 0;

    // Apply the box-shadow
    @if $enable-shadows {
      box-shadow: $input-box-shadow, $input-focus-box-shadow;
    } @else {
      box-shadow: $input-focus-box-shadow;
    }

    // Handle light and dark mode
    @media (prefers-color-scheme: dark) {
      background-color: $dark-mode-background;
      border-color: $dark-mode-border;
    }

    @media (prefers-color-scheme: light) {
      background-color: $light-mode-background;
      border-color: $light-mode-border;
    }
  }
}

@mixin form-validation-state($state, $color) {
  .#{$state}-feedback {
    display: none;
    width: 100%;
    margin-top: $form-feedback-margin-top;
    font-size: $form-feedback-font-size;
    color: $color;
  }

  .#{$state}-tooltip {
    position: absolute;
    top: 100%;
    z-index: 5;
    display: none;
    max-width: 100%; // Contain to parent when possible
    padding: .5rem;
    margin-top: .1rem;
    font-size: .875rem;
    line-height: 1;
    color: $white;
    background-color: rgba($color, .8);
    border-radius: .2rem;
  }

  .form-control,
  .custom-select {
    .was-validated &:#{$state},
    &.is-#{$state} {
      border-color: $color;

      &:focus {
        border-color: $color;
        //box-shadow: 0 1px $input-focus-width 0 rgba($color, .75);
      }

      ~ .#{$state}-feedback,
      ~ .#{$state}-tooltip {
        display: block;
      }
    }

    // Dark mode colors for form control
    @media (prefers-color-scheme: dark) {
      background-color: $dark-mode-background;
      border-color: $dark-mode-border;
      color: $white;

      &:focus {
        background-color: $dark-mode-background;
        border-color: $color;
      }
    }

    // Light mode colors for form control
    @media (prefers-color-scheme: light) {
      background-color: $light-mode-background;
      border-color: $light-mode-border;
      color: $black;

      &:focus {
        background-color: $light-mode-background;
        border-color: $color;
      }
    }
  }

  .form-check-input {
    .was-validated &:#{$state},
    &.is-#{$state} {
      ~ .form-check-label {
        color: $color;
      }

      ~ .#{$state}-feedback,
      ~ .#{$state}-tooltip {
        display: block;
      }
    }

    // Dark mode for form-check-input
    @media (prefers-color-scheme: dark) {
      background-color: $dark-mode-background;
      border-color: $dark-mode-border;
    }

    // Light mode for form-check-input
    @media (prefers-color-scheme: light) {
      background-color: $light-mode-background;
      border-color: $light-mode-border;
    }
  }

  .custom-control-input {
    .was-validated &:#{$state},
    &.is-#{$state} {
      ~ .custom-control-label {
        color: $color;

        &::before {
          background-color: lighten($color, 25%);
          border-color: lighten($color, 25%);
        }
      }

      ~ .#{$state}-feedback,
      ~ .#{$state}-tooltip {
        display: block;
      }

      &:checked {
        ~ .custom-control-label::before {
          @include gradient-bg(lighten($color, 10%));
          border-color: lighten($color, 25%);
        }
      }

      &:focus {
        ~ .custom-control-label::before {
          box-shadow: 0 0 0 1px $body-bg, 0 0 0 $input-focus-width rgba($color, .25);
        }
      }
    }

    // Dark mode for custom-control-input
    @media (prefers-color-scheme: dark) {
      background-color: $dark-mode-background;
      border-color: $dark-mode-border;
    }

    // Light mode for custom-control-input
    @media (prefers-color-scheme: light) {
      background-color: $light-mode-background;
      border-color: $light-mode-border;
    }
  }

  // custom file
  .custom-file-input {
    .was-validated &:#{$state},
    &.is-#{$state} {
      ~ .custom-file-label {
        border-color: $color;

        &::before { border-color: inherit; }
      }

      ~ .#{$state}-feedback,
      ~ .#{$state}-tooltip {
        display: block;
      }

      &:focus {
        ~ .custom-file-label {
          box-shadow: 0 0 0 $input-focus-width rgba($color, .25);
        }
      }
    }

    // Dark mode for custom file input
    @media (prefers-color-scheme: dark) {
      background-color: $dark-mode-background;
      border-color: $dark-mode-border;
    }

    // Light mode for custom file input
    @media (prefers-color-scheme: light) {
      background-color: $light-mode-background;
      border-color: $light-mode-border;
    }
  }
}
